demo1 netty作为http服务器的demo
demo2 netty的socket编程例子
demo3 netty的聊天例子
demo4 netty的心跳检测机制

Reactor模式：反应器模式,Netty整体架构是Reactor模式的完整体现

1、传统模式的缺点
1) 一个socket一个线程
2) 服务端能够建立的线程数有限，线程上下文切换也要消耗资源
3) 连接建立好之后，连接上未必时时刻刻都有数据传递，服务端的线程资源浪费

2、Reactor模式的5种角色构成
1) Handle(句柄或是描述符)：本质上表示一种资源，是由操作系统提供的。该资源用于表示一个个事件，比如说文件描述符，或是针对网络编程中的Socket描述符，
   事件既可以来自外部，也可以来自于内部。外部事件比如说客户端提供的连接请求，客户端发送过来的数据等。内部事件比如说操作系统产生的定时器事件等，它
   本质上就是一个文件描述符。Handle是事件产生的发源地。

2) Synchronous Event Demultiplexer(同步事件分离器)：它本身就是系统调用，用于等待事件的发生(事件可能是一个，也可能多个)，调用方在调用它的时候会
   被阻塞，一直阻塞到同步事件分离器上有事件产生为止。对于Linux来说，同步事件分离器指的就是常用的IO多路复用，比如select、poll、epoll等。对应于
   Java Nio的Selector组件，对应的阻塞方法就是select方法。

3) Event Handler(事件处理器)：本身由多个回调方法构成，这些回调方法构成了与应用相关的对于某个事件的反馈机制。Netty相比于Java Nio来说，在事件处理器
   这个角色上进行了升级，它为我们开发者提供了大量的回调方法，供我们在特定事件产生时实现相应的回调方法进行业务逻辑的处理。

4) Concrete Event Handler(具体事件处理器)：它是事件处理器的实现。它本身实现了事件处理器所提供的各个回调方法，从而实现了特定业务的逻辑。它本质上就是
   我们所编写的一个个处理器实现。

